#!/usr/bin/env python3

import os
import shutil
import re
import argparse
import time
from datetime import datetime

def move_files_by_timestamp(src_dir, dest_dir):
    # Regex to match ISO8601-like timestamps in filenames
    timestamp_regex = r"(\d{4}-\d{2}-\d{2}T\d{2}-\d{2}-\d{2})"
    
    for root, dirs, files in os.walk(src_dir):
        for file in files:
            # Search for timestamp in filename
            match = re.search(timestamp_regex, file)
            
            if match:
                # Extract timestamp from filename
                timestamp_str = match.group(1)
                
                try:
                    timestamp = datetime.strptime(timestamp_str, "%Y-%m-%dT%H-%M-%S")
                    sub_dir = os.path.join(dest_dir, timestamp.strftime("%Y/%m/%d"))
                    src_file_path = os.path.join(root, file)

                    timeout_in_seconds = (15 * 60)
                    now = time.time()
                    mtime = os.path.getmtime(src_file_path)
                    if ((now - mtime) < timeout_in_seconds)
                        continue
                    dest_file_path = os.path.join(sub_dir, file)
                    os.makedirs(sub_dir, exist_ok=True)
                    
                    shutil.move(src_file_path, dest_file_path)
                except ValueError as e:
                    print(f"Error parsing timestamp for {file}: {e}")
            else:
                print(f"No timestamp found in {file}, skipping.")

def main():
    p = argparse.ArgumentParser(description="Move files based on ISO8601-like timestamp in filenames.")
    p.add_argument('src_dir', type=str, help="Source directory path")
    p.add_argument('dest_dir', type=str, help="Destination directory path")
    
    args = p.parse_args()
    
    move_files_by_timestamp(args.src_dir, args.dest_dir)

if __name__ == "__main__":
    main()
