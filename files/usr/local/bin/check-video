#!/usr/bin/env python3

import argparse
import subprocess
import sys
import os

def video_has_issues(filepath):
    args = ['ffmpeg','-v','error','-i','file:'+filepath,'-map','0:1','-f','null','-']
    rv = subprocess.run(args,
                        stdout=subprocess.PIPE,
                        stderr=subprocess.PIPE)
    stderr = rv.stderr

    if ((rv.returncode == 0) and (stderr != b'')):
        return True
    if rv.returncode != 0:
        return True
    return False

VALID_EXTS = ['.mkv','.mp4','.avi','.flv','.wmv','.mpg','.mpeg','.asf','.webm']
def check_video(filepath,rename=False):
    if os.path.splitext(filepath)[1] not in VALID_EXTS:
        return
    if filepath.endswith('.stream.flv'):
        return

    print(f"{filepath}: ",end='',flush=True)
    rv = video_has_issues(filepath)
    print("broken" if rv else "clean")        
    if rv and rename:
        new_filepath = filepath + '.needs_fixing'
        os.renames(filepath,new_filepath)
        print(f'renamed {filepath} -> {new_filepath}')
    


if __name__ == '__main__':
    p = argparse.ArgumentParser()
    p.add_argument("--rename",
                   action='store_true',
                   help='')
    p.add_argument("paths",nargs='+');
    args = p.parse_args()
    
    for path in args.paths:
        if os.path.isfile(path):
            check_video(path,args.rename)
        for (root,dirnames,filenames) in os.walk(path):
            for filename in filenames:
                filepath = os.path.join(root,filename)
                check_video(filepath,args.rename)
