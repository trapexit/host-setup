#!/usr/bin/env python3

import subprocess
import os
import sys
import argparse


def fix_video_pass_1(filepath):
    input_filepath = os.path.realpath(filepath)
    basepath = os.path.dirname(input_filepath)
    filename = os.path.basename(input_filepath)
    filename,ext = os.path.splitext(filename)
    ffmpeg_input_filepath = f'file:{input_filepath}'

    output_filename = f"fixed-pass1_{filename}{ext}"
    output_filepath = os.path.join(basepath,output_filename)
    ffmpeg_output_filepath = f'file:{output_filepath}'
    args = ['docker',
            'run',
            '--pull=always',
            '--rm',
            '-it',
            '--device=/dev/dri',
            f'--mount=type=bind,src={basepath},dst={basepath}',
            'linuxserver/ffmpeg',
            '-hide_banner',
            '-loglevel','info',
            '-i',ffmpeg_input_filepath,
            '-c','copy',
            '-copyts',
            '-y',
            ffmpeg_output_filepath]
    print(args)    
    rv = subprocess.run(args)

    return output_filepath


def fix_video_pass_2(filepath):
    input_filepath = os.path.realpath(filepath)
    basepath = os.path.dirname(input_filepath)
    filename = os.path.basename(input_filepath)
    filename,ext = os.path.splitext(filename)
    filename = filename.removeprefix("fixed-pass1_")
    ffmpeg_input_filepath = f'file:{input_filepath}'

    output_filename = f"fixed-pass2_{filename}{ext}"
    output_filepath = os.path.join(basepath,output_filename)
    ffmpeg_output_filepath = f'file:{output_filepath}'
    args = ['docker',
            'run',
            '--pull=always',
            '--rm',
            '-it',
            '--device=/dev/dri',
            f'--mount=type=bind,src={basepath},dst={basepath}',
            'linuxserver/ffmpeg',
            '-hide_banner',
            '-loglevel','info',
            '-fflags','+igndts+genpts+discardcorrupt',
            '-i',ffmpeg_input_filepath,
            '-c','copy',
            '-y',
            ffmpeg_output_filepath]
    print(args)
    rv = subprocess.run(args)

    return output_filepath


if __name__ == '__main__':
    p = argparse.ArgumentParser()
    p.add_argument("paths",nargs='+');
    args = p.parse_args()

    print(f"args: {args}")

    for filepath in args.paths:
        pass1 = fix_video_pass_1(filepath)
        pass2 = fix_video_pass_2(pass1)
